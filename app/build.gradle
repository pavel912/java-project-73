plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'application'
	id 'checkstyle'
	id 'jacoco'
	id 'org.liquibase.gradle' version '2.0.4'
	id 'org.siouan.frontend-jdk11' version '6.0.0'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.security:spring-security-core'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.security:spring-security-web'
 	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'com.querydsl:querydsl-core:5.0.0'
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	implementation 'org.springframework.data:spring-data-commons'

	implementation 'org.liquibase:liquibase-core:4.6.1'
	liquibaseRuntime 'org.liquibase:liquibase-core:4.6.1'
	liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
	liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:4.5.0'
	liquibaseRuntime "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
	liquibaseRuntime sourceSets.main.output

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'
	annotationProcessor 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'

	runtimeOnly 'com.h2database:h2:1.4.200'
	runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.5.4'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

application {
	mainClass = 'hexlet.code.TaskManagerApplication'
}

task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
	}

	dependsOn test // tests are required to run before generating the report
}

diffChangeLog {
	dependsOn compileJava
}


liquibase {
	activities {
		main {
			changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
			url 'jdbc:h2:./taskManagerDb'
			username 'admin'
			password 'admin'
			referenceUrl 'hibernate:spring:hexlet.code.domain' +
					'?dialect=org.hibernate.dialect.H2Dialect' +
					'&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
		}
	}
}

frontend {
	nodeVersion = '16.13.1'
	installScript = 'install'
	assembleScript = 'run build'
	packageJsonDirectory = file("${projectDir}/frontend")
}

def configFrontendTasks = {
	inputs.files(fileTree("$projectDir/frontend").exclude('build', 'node_modules'))
	outputs.dir("$buildDir/resources/main/static")
}

assembleFrontend {
	configure configFrontendTasks

	doLast {
		copy {
			from "$projectDir/frontend/build"
			into "$buildDir/resources/main/static"
		}
	}
}

installFrontend {
	configure configFrontendTasks
}

processResources.dependsOn assembleFrontend
